---
description: 
globs: 
alwaysApply: true
---
 모든 페이지와 컴포넌트는 초보자가 이해하기 쉽도록 최대한 나누지 않고, 하나의 파일에 작성**합니다.
- Next.js의 페이지 또는 Route는 반드시 단일 파일로 작성합니다. (불필요한 컴포넌트 분리를 하지 않습니다.)
- 노선 API 설정은 오직 "Lib/notion.ts> 한 파일에 모든 설정과 로직을 포함하며, 추가로 분리하지 않습니다.
- 스타일링과 UI 요소는 Taitwind CSS로만 구성하며 별도의 컴포년트 분리 없이 간단하게 클래스명으로 처리합니다.
- 변수 선언 및 상태 관리는 최소화하고, 복잡한 상태관리(usestate, useReducer 등)는 사용을 자제합니다.
- 복잡한 인터페이스보다는 간단한 타입 또는 단순 인터페이스만 사용합니다.
- 모든 API 호출은 커서 액션을 활용하며, 노선 APT와 연관된 로직도 커서 액션 한 개로만 제한하여 작성합니다.

## Component Guidelines
*## ShadCN Components
- 모든 UI 컴포년트는 ShadCN을 사용해야 합니다.
- 컴포넌트 사용 전 설치 여부를 확인해야 합니다:
"/components/ui'
디렉토리 체크
컴포넌트 설치 명령어를 사용해야 합니다: 'npx Shadcn@latest
add [component-name]'
^ 주의:
"npx shadcn-ui@latest add' 명령어는
deprecated. 반드시 'npx Shadcn@latest add
사용해야 합니다
### Icons

모든 아이콘은 Lucide React를 사용해야 합니다
아이콘 임포트 방법:'import { IconName } from
"lucide-react"'
- 예시: 'import { Search, Menu } from "lucide-react"'

### Component Structure
컴포넌트는 '/components' 디렉토리 내에 위치해야 합니다
UI 컴포넌트는 '/components/ui' 디렉토리에 위치해야 합니다
페이지별 컴포넌트는 '/app' 디렉토리 내 해당 라우트에 위치해야 합니다

## Best Practices

- TypeScript 타입은 반드시 정의해야 합니다
- 컴포넌트는 재사용 가능하도록 설계해야 합니다